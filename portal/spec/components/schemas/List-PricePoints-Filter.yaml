title: List PricePoints Filter
type: object
properties:
  date_field:
    allOf:
      - $ref: "./Basic-Date-Field.yaml"
    description: "The type of filter you would like to apply to your search. Use in query: `filter[date_field]=created_at`."
  start_date:
    type: string
    format: date
    example: "2011-12-17"
    description:
      "The start date (format YYYY-MM-DD) with which to filter the date_field.
      Returns price points with a timestamp at or after midnight (12:00:00 AM) in your site’s time zone on the date specified."
  end_date:
    type: string
    format: date
    example: "2011-12-15"
    description:
      "The end date (format YYYY-MM-DD) with which to filter the date_field.
      Returns price points with a timestamp up to and including 11:59:59PM in your site’s time zone on the date specified."
  start_datetime:
    type: string
    format: date-time
    example: "2011-12-19T10:15:30+01:00"
    description:
      "The start date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns price points with a timestamp at or after exact time provided in query.
      You can specify timezone in query - otherwise your site's time zone will be used.
      If provided, this parameter will be used instead of start_date."
  end_datetime:
    type: string
    format: date-time
    example: "2019-06-07T17:20:06Z"
    description:
      "The end date and time (format YYYY-MM-DD HH:MM:SS) with which to filter the date_field. Returns price points with a timestamp at or before exact time provided in query.
      You can specify timezone in query - otherwise your site's time zone will be used.
      If provided, this parameter will be used instead of end_date."
  type:
    type: array
    items:
      $ref: "./Price-Point-Type.yaml"
    example:
      - catalog
      - default
      - custom
    default:
      - catalog
      - default
    style: form
    explode: false
    description: "Allows fetching price points with matching type. Use in query: `filter[type]=custom,catalog`."
  ids:
    type: array
    items:
      type: integer
    example:
      - 1
      - 2
      - 3
    style: form
    explode: false
    description: "Allows fetching price points with matching id based on provided values. Use in query: `filter[ids]=1,2,3`."
  archived_at:
    allOf:
      - $ref: "./Include-Not-Null.yaml"
    description: "Allows fetching price points only if archived_at is present or not. Use in query: `filter[archived_at]=not_null`."
