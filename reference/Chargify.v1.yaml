openapi: 3.0.0
info:
  title: Chargify
  version: '1.0'
  contact:
    email: support@chargify.com
  description: Manage your company's subscriptions through the Chargify API.
tags:
  - name: Legacy Subscription Balance
  - name: Legacy Transactions
  - name: Legacy Statements
paths:
  '/subscriptions/{subscription_id}/adjustments.json':
    parameters:
      - schema:
          type: string
        name: subscription_id
        in: path
        required: true
        description: The Chargify id of the subscription to which the adjustment applies
    post:
      summary: Create Adjustment
      tags:
        - Legacy Subscription Balance
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  adjustment:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The Chargify id of the adjustment
                      success:
                        type: boolean
                        description: 'Boolean indicating if the adjustment was successfully applied to the subscription balance. Note - At this time, this will always be true'
                      memo:
                        description: The supplied description of the adjustment
                        type: string
                        nullable: true
                      amount_in_cents:
                        type: integer
                        description: The amount of the adjustment represented in cents
                      starting_balance_in_cents:
                        type: integer
                        description: The subscription balance in cents before the adjustment applied
                      ending_balance_in_cents:
                        type: integer
                        description: The subscription balance in cents after the adjustment applied
                      type:
                        type: string
                        enum:
                          - Adjustment
                      kind:
                        type: string
                        nullable: true
                      transaction_type:
                        type: string
                        enum:
                          - adjustment
                      subscription_id:
                        type: integer
                        description: The Chargify id of the subscription associated with this adjustment
                      product_id:
                        type: integer
                        description: The Chargify id of the product associated with the subscription's at the time of the adjustment
                      component_id:
                        type: integer
                        nullable: true
                      component_handle:
                        type: string
                        nullable: true
                      component_price_point_id:
                        type: integer
                        nullable: true
                      component_price_point_handle:
                        type: string
                        nullable: true
                      statement_id:
                        type: integer
                        description: The Chargify id of the statement to which this adjustment was applied
                      customer_id:
                        type: integer
                        description: The Chargify id of the customer to which the subscription belongs
                      item_name:
                        type: string
                        nullable: true
                      currency:
                        type: string
                        description: The currency ISO code associated with the currency which was used to make the adjustment
                        enum:
                          - AUD
                          - BRL
                          - CAD
                          - CHF
                          - CNY
                          - CZK
                          - DKK
                          - EUR
                          - GBP
                          - HKD
                          - INR
                          - JPY
                          - MXN
                          - MYR
                          - NOK
                          - NZD
                          - PHP
                          - PLN
                          - RON
                          - RUB
                          - SEK
                          - SGD
                          - USD
                          - ZAR
                          - AED
                          - SAR
                          - ILS
                      exchange_rate:
                        type: integer
                      created_at:
                        type: string
                        description: The time that the adjustment was created
                      payment_id:
                        type: integer
                        nullable: true
                      period_range_start:
                        type: string
                        nullable: true
                        format: date
                        description: The start of the billing period for which the adjustment applies
                        example: '2021-04-02'
                      period_range_end:
                        type: string
                        nullable: true
                        format: date
                        description: The end of the billing period period for which the adjustment applies
                        example: '2021-04-02'
                      gateway_used:
                        type: string
                        nullable: true
                      gateway_transaction_id:
                        type: integer
                        nullable: true
                      gateway_order_id:
                        type: integer
                        nullable: true
                      tax_id:
                        type: integer
                        nullable: true
              examples:
                Example:
                  value:
                    adjustment:
                      id: 12345
                      subscription_id: 54321
                      type: Adjustment
                      kind: null
                      transaction_type: adjustment
                      success: true
                      amount_in_cents: 1000
                      memo: null
                      created_at: '2021-04-02T15:54:10-04:00'
                      starting_balance_in_cents: 8800
                      ending_balance_in_cents: 9800
                      gateway_used: null
                      gateway_transaction_id: null
                      gateway_order_id: null
                      payment_id: null
                      product_id: 98765
                      tax_id: null
                      component_id: null
                      statement_id: 56789
                      customer_id: 38921
                      item_name: null
                      period_range_start: '2021-04-02'
                      period_range_end: '2021-04-02'
                      currency: USD
                      exchange_rate: 1
                      component_handle: null
                      component_price_point_id: null
                      component_price_point_handle: null
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
              examples:
                Example:
                  value:
                    errors:
                      - 'Amount: is not a number.'
      operationId: post-subscriptions-subscriptionId-adjustments.json
      description: |-
        | ❗️  This endpoint is only for subscriptions using Legacy Statement Billing  |
        |-----------------------------------------------------------------------------|

        # Create Adjustment

        | Scenario 1 | To create an Adjustment on a Subscription to increase the balance by a certain dollar amount, include the following to your request: | `"amount":"4.00"`                                            |
        |------------|--------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------|
        | Scenario 2 | To increase the Subscription balance by a certain amount of cents, use the following attribute in your request:                      | `"amount_in_cents":100`                                      |
        | Scenario 3 | To decrease the Subscription balance by a certain dollar amount, the request must contain:                                           | `"amount":"-4.00"`                                           |
        | Scenario 4 | To decrease the Subscription balance by a certain amount of cents, use:                                                              | `"amount_in_cents":"-400"`                                   |
        | Scenario 5 | To set the Subscription balance to an exact dollar amount, include the following attributes to the request:                          | `"adjustment_method":"target", "amount":"100.00"`            |
        | Scenario 6 | To set the Subscription balance to an exact positive amount of cents, the request must contain the following attributes:             | `"adjustment_method":"target",` `"amount_in_cents":"10000"`  |
        | Scenario 7 | To set the Subscription balance to an exact negative amount of cents, use the following attributes in the request:                   | `"adjustment_method":"target",` `"amount_in_cents":"-10000"` |

        ## Help Documentation 

        Full documentation on how to record Adjustments in the Chargify UI can be located [here](http://help.chargify.com/subscriptions/adjustments.html). It goes into greater detail on how the user interface will react when applying adjustments.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                adjustment:
                  type: object
                  required:
                    - amount_in_cents
                  properties:
                    amount_in_cents:
                      oneOf:
                        - type: string
                          pattern: ^\d+$
                        - type: number
                      description: '(either amount or amount_in_cents is required) If you use this parameter, you should pass the amount represented as a number of cents. For example, $10.00 would be represented as 1000. If you pass a value for both amount and amount_in_cents, the value in amount_in_cents will be used and amount will be discarded.'
                    amount:
                      oneOf:
                        - type: string
                          pattern: '^[1-9]\d*(\.\d+)?$'
                        - type: number
                      description: '(either amount or amount_in_cents is required) If you use this parameter, you should pass a dollar amount represented as a string. For example, $10.00 would be represented as 10.00 and -$10.00 would be represented as -10.00.'
                    memo:
                      type: string
                      description: A helpful explanation for the adjustment. This amount will remind you and your customer for the reason for the assessment of the adjustment.
                      maxLength: 255
                    period_range_start:
                      type: string
                      description: 'A date range represents a service period. If a start is provided, an end must be supplied as well. These dates are optional and do not impact the billing of the charge. If provided, the date range will be used for revenue placement on the Finance Report and Revenue Recognition report.'
                      format: date
                    period_range_end:
                      type: string
                      description: 'A date range represents a service period. If an end is provided, a start must be supplied as well. These dates are optional and do not impact the billing of the charge. If provided, the date range will be used for revenue placement on the Finance Report and Revenue Recognition report.'
                      format: date
                    adjustment_method:
                      type: string
                      enum:
                        - target
                      description: 'A string that toggles how the adjustment should be applied. If target is passed for this param, the adjustment will automatically set the subscription’s balance to the amount. If left blank, the amount will be added to the current balance.'
              required:
                - adjustment
  '/subscriptions/{subscription_id}/charges.json':
    parameters:
      - schema:
          type: integer
        name: subscription_id
        in: path
        required: true
        description: The Chargify id of the subscription to which the charge applies
    post:
      summary: Create Charge
      tags:
        - Legacy Subscription Balance
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  charge:
                    type: object
                    properties:
                      id:
                        type: integer
                      subscription_id:
                        type: integer
                      type:
                        type: string
                        enum:
                          - Charge
                      kind:
                        type: string
                        enum:
                          - one_time
                      transaction_type:
                        type: string
                        enum:
                          - charge
                      success:
                        description: 'The success of the charge. At this time, all charges that are returned will return true here'
                        type: boolean
                      amount_in_cents:
                        description: 'The amount of the charge and captured payment, represented in cents.'
                        type: integer
                      memo:
                        description: The supplied memo for the charge
                        type: string
                        nullable: true
                      created_at:
                        type: string
                        description: The time that the charge was created
                      starting_balance_in_cents:
                        type: integer
                        description: The subscription balance in cents before the charge was applied
                      ending_balance_in_cents:
                        type: integer
                        description: The subscription balance in cents after the charge was applied
                      gateway_used:
                        type: string
                        nullable: true
                      gateway_transaction_id:
                        type: integer
                        nullable: true
                      gateway_order_id:
                        type: integer
                        nullable: true
                      payment_id:
                        type: integer
                        nullable: true
                      product_id:
                        type: integer
                        nullable: true
                      price_point_id:
                        type: integer
                        nullable: true
                      price_point_handle:
                        type: string
                        nullable: true
                      tax_id:
                        type: integer
                        nullable: true
                      component_id:
                        type: integer
                        nullable: true
                      component_handle:
                        type: string
                        nullable: true
                      component_price_point_id:
                        type: integer
                        nullable: true
                      component_price_point_handle:
                        type: string
                        nullable: true
                      statement_id:
                        type: integer
                        nullable: true
                      customer_id:
                        type: integer
                        nullable: true
                      item_name:
                        type: string
                      period_range_start:
                        type: string
                        nullable: true
                      period_range_end:
                        type: string
                        nullable: true
                      currency:
                        type: string
                        enum:
                          - AUD
                          - BRL
                          - CAD
                          - CHF
                          - CNY
                          - CZK
                          - DKK
                          - EUR
                          - GBP
                          - HKD
                          - INR
                          - JPY
                          - MXN
                          - MYR
                          - NOK
                          - NZD
                          - PHP
                          - PLN
                          - RON
                          - RUB
                          - SEK
                          - SGD
                          - USD
                          - ZAR
                          - AED
                          - SAR
                          - ILS
                      exchange_rate:
                        type: integer
                      quantity:
                        type: string
                        enum:
                          - '1.0'
                      original_amount_in_cents:
                        type: integer
                      discount_amount_in_cents:
                        type: integer
                      taxable_amount_in_cents:
                        type: integer
                        nullable: true
                      taxations:
                        type: array
                        nullable: true
                        items:
                          type: object
                          properties:
                            tax_id:
                              type: integer
                            tax_charge_id:
                              type: integer
                            tax_name:
                              type: string
                            rate:
                              type: string
                            tax_amount_in_cents:
                              type: integer
                            tax_rules:
                              type: array
                              items:
                                type: object
                                properties:
                                  tax_rule_id:
                                    type: integer
                                  country_code:
                                    type: string
                                  subdivision_code:
                                    type: string
                                  rate:
                                    type: string
                                  tax_amount_in_cents:
                                    type: integer
                                  description:
                                    type: string
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
              examples:
                Example:
                  value:
                    errors:
                      - 'Memo: cannot be blank.'
                      - This subscription is not eligible to accept charges.
      operationId: post-subscriptions-subscription_id-charges.json
      description: |-
        | ❗️  This endpoint is only for subscriptions using Legacy Statement Billing  |
        |-----------------------------------------------------------------------------|

        # Create Charge

        Creating a charge requires a valid, live subscription (i.e. subscriptions that are not canceled or expired). The subscription must be referenced by `subscription_id`.

        When a charge is created, a payment in the amount of the assessed charge is automatically captured from the credit card on file for the subscription. For this purpose, the subscription must have a payment method in order to support adding a charge. Payment collection will not be attempted if:

        + the subscription is on legacy invoice billing
        + the charge is accrued to the next renewal (`delay_capture` = true)

        ## Limitations of attribute combinations

        When you add a charge to an existing subscription, you may not use the following combination of attribute values:

        + `delay_capture` = true
        + `accrue_on_failure` = true

        ## Help Documentation

        This method of recording a charge against a subscription is referred to as a **"One-time Charge"** in the Chargify Help Documentation.

        Full documentation on how to record a One-time Charge in the Chargify UI can be located [here](https://help.chargify.com/subscriptions/one-time-charges.html).
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                charge:
                  type: object
                  required:
                    - amount_in_cents
                    - memo
                  properties:
                    amount_in_cents:
                      description: '(either amount or amount_in_cents is required) If you use this parameter, you should pass the amount represented as a number of cents, either as a string or integer. For example, $10.00 would be represented as 1000. If you pass a value for both amount and amount_in_cents, the value in amount_in_cents will be used and amount will be discarded.'
                      oneOf:
                        - type: string
                          pattern: ^\d+$
                        - type: number
                    memo:
                      description: A helpful explanation for the charge. This amount will remind you and your customer for the reason for the assessment of the charge.
                      type: string
                    amount:
                      description: '(either amount or amount_in_cents is required) If you use this parameter, you should pass a dollar amount represented as a string. For example, $10.00 would be represented as 10.00.'
                      oneOf:
                        - type: string
                          pattern: '^[1-9]\d*(\.\d+)?$'
                        - type: number
                    accrue_on_failure:
                      description: 'If true, the charge will be added to the subscription whether or not the payment succeeds. If false, only the failed payment will be recorded, and the balance will not be increased. This attribute is ignored if delay_capture is true.'
                      default: false
                      oneOf:
                        - type: boolean
                        - type: integer
                          enum:
                            - 0
                            - 1
                        - type: string
                          enum:
                            - '0'
                            - '1'
                    delay_capture:
                      description: 'If true, Chargify does not attempt to immediately capture a payment for this charge (instead, wait until the next assessment date). Note if this option is used use_negative_balance is assumed as false.'
                      oneOf:
                        - type: boolean
                        - type: integer
                          enum:
                            - 0
                            - 1
                        - type: string
                          enum:
                            - '0'
                            - '1'
                    taxable:
                      description: 'If true, taxes will be assessed on the charge.'
                      default: false
                      oneOf:
                        - type: boolean
                        - type: integer
                          enum:
                            - 0
                            - 1
                        - type: string
                          enum:
                            - '0'
                            - '1'
                    payment_collection_method:
                      type: string
                      description: '(for subscriptions using legacy invoice billing only) When delay_capture is set to false, and payment_collection_method is set to invoice, a mid-period invoice will be created from this charge. The charge will not appear on the invoice created at the next renewal'
                      default: automatic
                      enum:
                        - automatic
                        - invoice
                    period_range_start:
                      description: 'A date range represents a service period. If a start is provided, an end must be supplied as well. These dates are optional and do not impact the billing of the charge. If provided, the date range will be used for revenue placement on the Finance Report and Revenue Recognition report.'
                      type: string
                    period_range_end:
                      description: 'A date range represents a service period. If an end is provided, a start must be supplied as well. These dates are optional and do not impact the billing of the charge. If provided, the date range will be used for revenue placement on the Finance Report and Revenue Recognition report.'
                      type: string
                    use_negative_balance:
                      description: 'This option specifies whether or not a negative current balance should be used when creating the new charge. If true, use the negative balance on the subscription to calculate the charge. If false, do not use the negative balance.'
                      oneOf:
                        - type: boolean
                        - type: integer
                          enum:
                            - 0
                            - 1
                        - type: string
                          enum:
                            - '0'
                            - '1'
              required:
                - charge
            examples:
              Example:
                value:
                  charge:
                    id: 3944471
                    subscription_id: 108287
                    type: Charge
                    kind: one_time
                    transaction_type: charge
                    success: true
                    amount_in_cents: 1000
                    memo: Upcharge
                    created_at: '2021-04-02T17:52:09-04:00'
                    starting_balance_in_cents: -7486
                    ending_balance_in_cents: -6486
                    gateway_used: null
                    gateway_transaction_id: null
                    gateway_order_id: null
                    payment_id: 3944472
                    product_id: 7580
                    tax_id: null
                    component_id: null
                    statement_id: 1220246
                    customer_id: 171137
                    item_name: prod_10430
                    period_range_start: '2021-04-02'
                    period_range_end: '2021-04-02'
                    currency: USD
                    exchange_rate: 1
                    component_handle: null
                    component_price_point_id: null
                    component_price_point_handle: null
                    quantity: '1.0'
                    original_amount_in_cents: 1000
                    discount_amount_in_cents: 0
                    taxable_amount_in_cents: null
                    price_point_id: null
                    price_point_handle: null
                    taxations: []
  '/subscriptions/{subscription_id}/payments.json':
    parameters:
      - schema:
          type: integer
        name: subscription_id
        in: path
        required: true
        description: The Chargify id of the subscription to which the payment applies
    post:
      summary: Create Payment
      tags:
        - Legacy Subscription Balance
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  payment:
                    type: object
                    properties:
                      id:
                        type: integer
                      subscription_id:
                        type: integer
                      type:
                        type: string
                        enum:
                          - Payment
                      kind:
                        type: string
                        enum:
                          - manual
                      transaction_type:
                        type: string
                        enum:
                          - payment
                      success:
                        type: boolean
                      amount_in_cents:
                        type: integer
                      memo:
                        type: string
                        nullable: true
                      created_at:
                        type: string
                      starting_balance_in_cents:
                        type: integer
                      ending_balance_in_cents:
                        type: integer
                      gateway_used:
                        type: string
                        nullable: true
                      gateway_transaction_id:
                        type: integer
                        nullable: true
                      gateway_order_id:
                        type: integer
                        nullable: true
                      payment_id:
                        type: integer
                        nullable: true
                      product_id:
                        type: integer
                        nullable: true
                      tax_id:
                        type: integer
                        nullable: true
                      component_id:
                        type: integer
                        nullable: true
                      statement_id:
                        type: integer
                      customer_id:
                        type: integer
                      item_name:
                        type: string
                        nullable: true
                      period_range_start:
                        type: string
                        nullable: true
                      period_range_end:
                        type: string
                        nullable: true
                      currency:
                        type: string
                      exchange_rate:
                        type: number
                      component_handle:
                        type: string
                        nullable: true
                      component_price_point_id:
                        type: integer
                        nullable: true
                      component_price_point_handle:
                        type: string
                        nullable: true
                      parent_id:
                        type: integer
                        nullable: true
                      role:
                        type: string
                        nullable: true
                      card_number:
                        type: string
                        nullable: true
                      card_expiration:
                        type: string
                        nullable: true
                      card_type:
                        type: string
                        nullable: true
                      refunded_amount_in_cents:
                        type: integer
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  errors:
                    type: object
              examples:
                Example:
                  value:
                    errors:
                      amount_in_cents:
                        - 'Amount: is not a number.'
      operationId: post-subscriptions-subscription_id-payments.json
      description: |-
        | ❗️  This endpoint is only for subscriptions using Legacy Statement Billing |
        |---------------------------------------------------------------------------|

        ## External Payments

        Chargify allows you to record payments that occur **outside** of the normal flow of payment processing.
        These payments are considered **external payments**. A common case to apply such a payment is when a customer pays by check or some other means for their subscription.

        Full documentation on how to record external payments in the Chargify UI can be located [here](http://help.chargify.com/subscriptions/subscription-actions.html#record-external-payment).
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                payment:
                  type: object
                  required:
                    - amount_in_cents
                  properties:
                    amount_in_cents:
                      oneOf:
                        - type: string
                          pattern: ^\d+$
                        - type: number
                      description: '(either amount or amount_in_cents is required) If you use this parameter, you should pass the amount represented as a number of cents. For example, $10.00 would be represented as 1000. If you pass a value for both amount and amount_in_cents, the value in amount_in_cents will be used and amount will be discarded.'
                    amount:
                      oneOf:
                        - type: string
                          pattern: '^[1-9]\d*(\.\d+)?$'
                        - type: number
                      description: '(either amount or amount_in_cents is required) If you use this parameter, you should pass a dollar amount represented as a string. For example, $10.00 would be represented as 10.00.'
                    memo:
                      type: string
                      description: Typically the description of why the payment occured
              required:
                - payment
  '/subscriptions/{subscription_id}/refunds.json':
    parameters:
      - schema:
          type: integer
        name: subscription_id
        in: path
        required: true
        description: The Chargify id of the subscription to which the refund applies
    post:
      summary: Create Refund
      tags:
        - Legacy Subscription Balance
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  refund:
                    type: object
                    properties:
                      id:
                        type: integer
                      subscription_id:
                        type: integer
                      type:
                        type: string
                        enum:
                          - Refund
                      kind:
                        type: string
                        enum:
                          - manual
                        nullable: true
                      transaction_type:
                        type: string
                        enum:
                          - refund
                      success:
                        type: boolean
                      amount_in_cents:
                        type: number
                      memo:
                        type: string
                      created_at:
                        type: string
                      starting_balance_in_cents:
                        type: integer
                      ending_balance_in_cents:
                        type: integer
                      gateway_used:
                        type: string
                        nullable: true
                      gateway_transaction_id:
                        type: integer
                        nullable: true
                      gateway_order_id:
                        type: integer
                        nullable: true
                      payment_id:
                        type: integer
                        nullable: true
                      product_id:
                        type: integer
                      tax_id:
                        type: integer
                        nullable: true
                      component_id:
                        type: integer
                        nullable: true
                      statement_id:
                        type: integer
                      customer_id:
                        type: integer
                      item_name:
                        type: string
                        nullable: true
                      period_range_start:
                        type: string
                        nullable: true
                      period_range_end:
                        type: string
                        nullable: true
                      currency:
                        type: string
                      exchange_rate:
                        type: number
                      component_handle:
                        type: string
                        nullable: true
                      component_price_point_id:
                        type: integer
                        nullable: true
                      component_price_point_handle:
                        type: string
                        nullable: true
              examples:
                Example:
                  value:
                    refund:
                      id: 3992912
                      subscription_id: 144009
                      type: Refund
                      kind: manual
                      transaction_type: refund
                      success: true
                      amount_in_cents: 1000
                      memo: Incorrectly billed
                      created_at: '2021-04-08T14:26:23-04:00'
                      starting_balance_in_cents: 8800
                      ending_balance_in_cents: 8800
                      gateway_used: null
                      gateway_transaction_id: null
                      gateway_order_id: null
                      payment_id: null
                      product_id: 7579
                      tax_id: null
                      component_id: null
                      statement_id: 1220172
                      customer_id: 229248
                      item_name: null
                      period_range_start: null
                      period_range_end: null
                      currency: USD
                      exchange_rate: 1
                      component_handle: null
                      component_price_point_id: null
                      component_price_point_handle: null
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  errors:
                    type: array
              examples:
                Example:
                  value:
                    errors:
                      - 'Memo: cannot be blank.'
      operationId: post-subscriptions-subscription_id-refunds.json
      description: |-
        | ❗️  This endpoint is only for subscriptions using Legacy Statement Billing |
        |---------------------------------------------------------------------------|

        # Refunds

        With Chargify you have the ability to apply a refund to a payment that has been processed at the gateway. There are two types of refunds:
        - **Internal** - a refund which interacts with the Gateway to return the amount back to the customer
        - **External** - a refund which _records_ a return which occurred outside of Chargify. No funds are returned to the customer 

        Note that external refunds will reduce revenue, but they do not affect the balance due for the subscription.

        For more information on creating refunds in general, please see [Refunds](https://help.chargify.com/subscriptions/refunds.html).

        ## External Refund Use Cases
         
        The use case for this type of refund is as follows:

        + You have a gateway that does not do **direct** refunds back to a Customer's bank account
        + To process a refund, you process the refund **through** your gateway account.
        + Afterwards, record the refund within Chargify

        ## Supported Gateways

        Interal refunds are only supported for the following gateways:

        + Authorize.Net
        + Braintree Blue
        + CyberSource
        + Elavon
        + eWay Rapid
        + Litle
        + Moneris
        + Orbital
        + Payeezy (First Data)
        + Pin Payments
        + Payment Express
        + Paymill
        + QuickPay
        + Stripe
        + Trust Commerce
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                refund:
                  type: object
                  required:
                    - payment_id
                    - amount_in_cents
                    - memo
                  properties:
                    payment_id:
                      type: integer
                      description: (required only if external is 0) The id of the payment which should be refunded to the customer through the Gateway
                    amount_in_cents:
                      oneOf:
                        - type: string
                          pattern: ^\d+$
                        - type: number
                      description: '(either amount or amount_in_cents is required) If you use this parameter, you should pass the amount represented as a number of cents. For example, $10.00 would be represented as 1000. If you pass a value for both amount and amount_in_cents, the value in amount_in_cents will be used and amount will be discarded.'
                    amount:
                      oneOf:
                        - type: string
                          pattern: '^[1-9]\d*(\.\d+)?$'
                        - type: number
                      description: '(either amount or amount_in_cents is required) If you use this parameter, you should pass a dollar amount represented as a string. For example, $10.00 would be represented as 10.00 and -$10.00 would be represented as -10.00.'
                    memo:
                      type: string
                      description: A helpful explanation for the refund. This amount will remind you and your customer for the reason for the refund.
                external:
                  type: integer
                  enum:
                    - 0
                    - 1
                  default: 0
                  description: 0 indicates that the refund was externally processed and should simply be recorded in Chargify. 1 indicates that Chargify should communicate with the Gateway to fully process the refund.
              required:
                - refund
  '/transactions/{transaction_id}.json':
    parameters:
      - schema:
          type: integer
        name: transaction_id
        in: path
        required: true
        description: The Chargify id of the transaction
    get:
      summary: Read Transaction
      tags:
        - Legacy Transactions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  transaction:
                    $ref: ../models/Legacy-Transaction.v1.yaml
      operationId: get-transactions-transaction_id-.json
      description: |-
        # Transactions

        Documentation in relation to transactions is broken up into two major sections within Chargify:

        + [Recorded Transactions](http://help.chargify.com/subscriptions/subscription-summary.html#transactions)
        + [Transactions Export](http://help.chargify.com/reports/exporting-data.html#transactions-line-item-export)

        ## Types

        | Type / Transaction Type | Description                                                                                                                                                                                                                                                | Effect on Subscriber Balance Due   | Effect on “Revenue” (money collected) |
        |-------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------|---------------------------------------|
        | charge                  | A positive amount assessed to a subscription for an item (i.e. a Product or Component) sale. Usually assessed at signup or renewal time.                                                                                                                   | Increases balance due              | No effect on revenue                  |
        | credit                  | A negative amount assessed to a subscription that indicates a “return” or “credit” for an item (i.e. a Product or Component). Usually offsets an earlier charge, i.e. in the case of a prorated downgrade.                                                 | Decreases balance due              | No effect on revenue                  |
        | adjustment              | A postive or negative amount that adjusts the subscription balance but cannot usually be directly attributed to a single item (Product or Component)                                                                                                       | Increases or decreases balance due | No effect on revenue                  |
        | payment                 | A postive amount that denotes amount paid to you by the subscriber, usually on their credit card or bank account via your payment gateway. Payments may also be recorded “manually” in the case of checks received, or money received outside of Chargify. | Decreases balance due              | Increases revenue                     |
        | refund                  | A positive amount that denotes “cash” given back to a subscriber (i.e. put back on their card) via a refund or credit at the gateway.                                                                                                                      | No effect on balance due           | Decreases revenue                     |
        | InfoTransaction / info  | An informational transaction whose description provides context for transactions nearby in time, or serves as a placeholder for another transaction that could not be attempted (i.e. when payment cannot be attempted because no card is on file)         | N/A                                | N/A                                   |
        | payment_authorization   | Deprecated. No longer appears in transactions listing                                                                                                                                                                                                      | N/A                                | N/A                                   |

        ## Kinds (Subtypes)

        ### Kinds for the ```charge``` transaction type

        | Type / Transaction Type | Kind                     | Description                                                                                                                                                                                  |
        |-------------------------|--------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | charge                  | trial                    | A charge for a subscription’s trial period. Usually applied at the time of signup, but sometimes after a migration where a trial is allowed.                                                 |
        | charge                  | initial                  | A charge for the initial/setup fee assessed according to the product setup settings. Usually applied at the time of signup, but sometimes after a migration where the setup fee is included. |
        | charge                  | baseline                 | A charge for the normal, recurring fee.                                                                                                                                                      |
        | charge                  | one_time                 | A one-time fee applied to a subscription, usually between normal renewals. Can be added in the Chargify UI or the API, and is captured (via credit card payment) immediately.                |
        | charge                  | delay_capture            | Like a one_time charge, but not captured (i.e. not paid) until the next normal renewal. Sometimes called an “accrued charge”.                                                                |
        | charge                  | quantity_based_component | A charge for the currently allocated quantity of a quantity-based component (i.e. seat licenses). Applied at renewal based on the quantity allocated at that time.                           |
        | charge                  | on_off_component         | A charge for the current status (on or off) of an on/off component. Applied at renewal.                                                                                                      |
        | charge                  | metered_component        | A charge for the usage of a metered component (i.e. minutes). Applied at renewal based on the usage during the last period.                                                                  |
        | charge                  | metered                  | Deprecated. May exist for very old transactions. Can be considered an alias for “metered_component”.                                                                                        |
        | charge                  | tax                      | A charge for the taxes computed on taxable line items for the billing event (signup or renewal).                                                                                             |
        | charge                  |                          | A generic charge that is not otherwise classified by any of the above values for `kind`.                                                                                                     |

        ### Kinds for the ```credit``` transaction type

        | Type / Transaction Type | Kind                     | Description                                                                                                                         |
        |-------------------------|--------------------------|-------------------------------------------------------------------------------------------------------------------------------------|
        | credit                  | quantity_based_component | A credit against a quantity-based component charge. Usually generated during a prorated downgrade for an amount previously charged. |
        | credit                  | on_off_component         | A credit against an on/off component charge. Usually generated during a prorated downgrade for an amount previously charged.        |
        | credit                  | tax                      | A credit against tax charges. Usually generated during a prorated downgrade to offset a tax amount already assessed.                |
        | credit                  |                          | A generic credit that is not otherwise classified by any of the above values for `kind`.                                            |
        ### Kinds for the ```adjustment``` transaction type

        | Type / Transaction Type | Kind                     | Description                                                                                                                                                                                         |
        |-------------------------|--------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | adjustment              | coupon                   | An adjustment that reflects the discount provided by a coupon. Is almost always a negative amount.                                                                                                  |
        | adjustment              | prorated                 | An adjustment applied during a migration proration that offsets overpayments resulting from the shortened period on the old product. Followed by the assessment of new charges for the new product. |
        | adjustment              | reactivation             | An adjustment as a result of a reactivation of a canceled subscription. A balance is cleared before the subscription reactivates.                                                                   |
        | adjustment              | quantity_based_component | Deprecated. Like a quantity_based_component credit in function but no longer used (since credits can be taxable but adjustments cannot).                                                            |
        | adjustment              | on_off_component         | Deprecated. Like an on_off_component credit in function but no longer used (since credits can be taxable but adjustments cannot).                                                                   |
        | adjustment              | tax                      | Deprecated. Like a tax credit in function but no longer used.                                                                                                                                       |
        | adjustment              | referral                 | An adjustment that acts like a coupon but is the discount applied to the referring subscriber in a Refer-A-Friend scenario.                                                                         |
        | adjustment              |                          | A generic adjustment that is not otherwise classified by any of the above values for `kind`. This is the kind of ad-hoc adjustment that can be created via the API.                                 |
        | adjustment              | voided_invoice           | (Relationship Invoicing only) An adjustment as a result of a voided invoice.                                                                                                                        |
        | adjustment              | cancelation              | (Relationship Invoicing only) An adjustment as a result of a canceled subscription.                                                                                                                 |

        ### Kinds for the ```payment``` transaction type

        | Type / Transaction Type | Kind                | Description                                                                                                                                                |
        |-------------------------|---------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | payment                 | one_time            | A payment received for a mid-period one-time charge (i.e. for a charge with kind one_time).                                                                |
        | payment                 | component_proration | A payment received for a mid-period component proration (allocation change).                                                                               |
        | payment                 | manual              | A payment recorded “manually” via the Admin UI or API. This kind of payment was not one automatically processed by Chargify, but instead entered manually. |
        | payment                 |                     | A generic payment received in any sitation not described above. Usually an automatically captured payment for a normal signup or renewal.                  |

        ### Kinds for the ```refund``` transaction type

        | Type / Transaction Type | Kind   | Description                                                                                                                                                                               |
        |-------------------------|--------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
        | refund                  | manual | A refund recorded “manually” via the Admin UI or API to reflect a refund already given outside of Chargify. Chargify does not actually submit this kind of refund to the payment gateway. |
        | refund                  |        | A generic refund resulting from any sitation not described above. This kind of refund is submitted by Chargify to the payment gateway to return money to the subscriber.                  |
  /transactions.json:
    get:
      summary: List Transactions
      tags:
        - Legacy Transactions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    transaction:
                      $ref: ../models/Legacy-Transaction.v1.yaml
      operationId: get-transactions.json
      parameters:
        - schema:
            type: integer
          in: query
          name: page
          description: 'Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.'
        - schema:
            type: integer
            maximum: 200
            default: 20
          in: query
          name: per_page
          description: This parameter indicates how many records to fetch in each request.
        - schema:
            type: string
            enum:
              - charge
              - credit
              - adjustment
              - payment
              - refund
          in: query
          name: kinds
          description: 'An array of transaction types. Example: http://example.chargify.com?kinds[]=charge&kinds[]=payment&kinds[]=credit'
        - schema:
            type: integer
          in: query
          name: since_id
          description: Returns transactions with an id greater than or equal to the one specified
        - schema:
            type: integer
          in: query
          name: max_id
          description: Returns transactions with an id less than or equal to the one specified
        - schema:
            type: string
          in: query
          name: since_date
          description: '(format YYYY-MM-DD) Returns transactions with a created_at timestamp at or after midnight (12:00:00 AM) in your site’s time zone on the date specified'
        - schema:
            type: string
          in: query
          name: until_date
          description: '(format YYYY-MM-DD) Returns transactions with a created_at timestamp up to and including 11:59:59PM in your site’s time zone on the date specified'
        - schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
          in: query
          name: direction
          description: The sort order is based on the created_at timestamp then id for transactions within the same second.
        - schema:
            type: string
            enum:
              - id
              - created_at
          in: query
          name: order_by
          description: 'Using an ID filter (since_id/max_id) will force id order, while using a Date filter (since_date/until_date) will force created_at order. Otherwise, your requested value will be used.'
      description: |-
        ## List Transactions for Site

        This method will return the full list of transactions for a Site. Pay close attention to filters and pagination in order to control results.

        **Notes about ID/Date Filters**

        - Using `since_id` and/or `max_id` is known as creating an “ID Filter”.

        - Using `since_date` and/or `until_date` is known as creating a “Date Filter”.

        - You may ONLY make use of either an ID Filter or a Date Filter in any one request.

        - If you specify both an ID Filter and a Date Filter, the Date Filter will be ignored.

        **Pagination Notes**

        Stepping through pages of results by incrementing the page number is typically less performant than using an ID Filter with `since_id`, especially at high values of page.
        For example, instead of these successive requests to traverse pagination:

            GET /transactions.json?page=1&per_page=200
            GET /transactions.json?page=2&per_page=200

        It is usually faster to use `since_id` to continue fetching from the last ID you observed:

            GET /transactions.json?since_id=0&per_page=200&direction=asc
            GET /transactions.json?since_id=1567&per_page=200&direction=asc

        In the above example, 1567 is derived by adding 1 to the “last” ID you received from the first request.
  '/subscriptions/{subscription_id}/transactions.json':
    parameters:
      - schema:
          type: string
        name: subscription_id
        in: path
        required: true
        description: The Chargify id of the subscription to which the transactions belong
    get:
      summary: List Transactions for Subscription
      tags:
        - Legacy Transactions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    transaction:
                      $ref: ../models/Legacy-Transaction.v1.yaml
      operationId: get-subscriptions-subscription_id-transactions.json
      parameters:
        - schema:
            type: integer
          in: query
          name: page
          description: 'Result records are organized in pages. By default, the first page of results is displayed. The page parameter specifies a page number of results to fetch. You can start navigating through the pages to consume the results. You do this by passing in a page parameter. Retrieve the next page by adding ?page=2 to the query string. If there are no results to return, then an empty result set will be returned.'
        - schema:
            type: integer
            maximum: 200
            default: 20
          in: query
          name: per_page
          description: This parameter indicates how many records to fetch in each request.
        - schema:
            type: string
            enum:
              - charge
              - credit
              - adjustment
              - payment
              - refund
          in: query
          name: kinds
          description: 'An array of transaction types. Example: http://example.chargify.com?kinds[]=charge&kinds[]=payment&kinds[]=credit'
        - schema:
            type: integer
          in: query
          name: since_id
          description: Returns transactions with an id greater than or equal to the one specified
        - schema:
            type: integer
          in: query
          name: max_id
          description: Returns transactions with an id less than or equal to the one specified
        - schema:
            type: string
          in: query
          name: since_date
          description: '(format YYYY-MM-DD) Returns transactions with a created_at timestamp at or after midnight (12:00:00 AM) in your site’s time zone on the date specified'
        - schema:
            type: string
          in: query
          name: until_date
          description: '(format YYYY-MM-DD) Returns transactions with a created_at timestamp up to and including 11:59:59PM in your site’s time zone on the date specified'
        - schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
          in: query
          name: direction
          description: The sort order is based on the created_at timestamp then id for transactions within the same second.
      description: |-
        ## List Transactions for Subscription.

        Given that you have subscriber's ID, you can retrieve a list of transactions associated with the subscription.

        The sort order is based on the `created_at` timestamp and cannot be changed.
  /transactions/count.json:
    get:
      summary: Transactions Count
      tags:
        - Legacy Transactions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  count:
                    type: integer
              examples:
                Example:
                  value:
                    count: 290
      operationId: get-transactions-count.json
      description: |-
        ## Read the Count of Transactions for a Site

        This method returns the full count of transactions associated with a Site.
  '/statements/{statement_id}.json':
    parameters:
      - schema:
          type: integer
        name: statement_id
        in: path
        required: true
        description: The Chargify id of the statement
    get:
      summary: Read Statement
      tags:
        - Legacy Statements
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  statement:
                    type: object
                    properties:
                      id:
                        type: integer
                      basic_html_view:
                        type: string
                        description: A simple HTML representation of the statement
                      html_view:
                        type: string
                        description: A more robust HTML representation of the statement
                      text_view:
                        type: string
                        description: A text representation of the statement
                      opened_at:
                        type: string
                        description: The date that the statement was opened
                      settled_at:
                        type: string
                        description: The date that the statement was settled
                        nullable: true
                      closed_at:
                        type: string
                        description: The date that the statement was closed
                        nullable: true
                      created_at:
                        type: string
                        description: The date that the statement was created
                      updated_at:
                        type: string
                        description: The date of last update for this statement
                      customer_first_name:
                        type: string
                        description: The customer’s first name
                      customer_last_name:
                        type: string
                        description: The customer’s last name
                      customer_billing_address:
                        type: string
                        description: The customer’s billing address
                        nullable: true
                      customer_billing_address_2:
                        type: string
                        description: 'The customer’s billing address, line 2'
                        nullable: true
                      customer_billing_city:
                        type: string
                        description: The customer’s billing city
                        nullable: true
                      customer_billing_country:
                        type: string
                        description: The customer’s billing country
                        nullable: true
                      customer_billing_state:
                        type: string
                        description: The customer’s billing state
                        nullable: true
                      customer_billing_zip:
                        type: string
                        description: The customer’s billing zip
                        nullable: true
                      customer_organization:
                        type: string
                        description: The customer’s organization
                        nullable: true
                      customer_shipping_address:
                        type: string
                        description: The customer’s shipping address
                        nullable: true
                      customer_shipping_address_2:
                        type: string
                        description: 'The customer’s shipping address, line 2'
                        nullable: true
                      customer_shipping_city:
                        type: string
                        description: The customer’s shipping city
                        nullable: true
                      customer_shipping_country:
                        type: string
                        description: The customer’s shipping country
                        nullable: true
                      customer_shipping_state:
                        type: string
                        description: The customer’s shipping state
                        nullable: true
                      customer_shipping_zip:
                        type: string
                        description: The customer’s shipping zip
                        nullable: true
                      starting_balance_in_cents:
                        type: integer
                        description: The subscription’s balance at the time the statement was opened
                      ending_balance_in_cents:
                        type: integer
                        description: The subscription’s balance at the time the statement was closed
                      future_payments:
                        type: array
                        items:
                          type: object
                      memo:
                        type: string
                      subscription_id:
                        type: integer
                        description: The Chargify id of the subscription associated with the statement
                      total_in_cents:
                        type: integer
                        description: The total amount billed
                      transactions:
                        type: array
                        description: A collection of the transaction objects associated with the statement
                        items:
                          type: object
                          properties:
                            transaction:
                              $ref: ../models/Legacy-Transaction.v1.yaml
                      events:
                        type: array
                        description: A collection of the event objects associated with the statement
                        items:
                          type: object
                          properties:
                            event:
                              type: object
                              properties:
                                id:
                                  type: integer
                                key:
                                  type: string
                                message:
                                  type: string
                                subscription_id:
                                  type: integer
                                created_at:
                                  type: string
                                event_specific_data:
                                  type: object
                                  properties:
                                    product_id:
                                      type: integer
                                    account_transaction_id:
                                      type: integer
                                      nullable: true
      operationId: get-statements-statement_id-.json
      description: |-
        ## Statements Intro

        Chargify Statements give you and your customers a breakdown of Subscription charges, payments, credits, and activity on a period-by-period basis. A Statement is similar to an “Invoice” because it is marked as currently paid or unpaid. Statements display all account activity for a specific usage period.

        ## Statements Documentation

        Documentation for Statements in the Chargify UI can be accessed via the following links / topics:

        + [Statements Reference](http://help.chargify.com/statements/statements-intro.html)
        + [Viewing Statements](http://help.chargify.com/subscriptions/subscription-summary.html#statements)
        + [Statement Settings](http://help.chargify.com/settings/statements.html)

        ## Statement Presentation

        The Statements API offers three ways to easily render a statement on your site. You can include a text representation of the statement or one of two HTML views that can be styled to your liking.

        | text_view       | A text representation of the statement             |
        |-----------------|----------------------------------------------------|
        | basic_html_view | A simple HTML representation of the statement      |
        | html_view       | A more robust HTML representation of the statement |

        Rendering individual statements can also be done as PDF by using the Accept/Content-Type header application/pdf or appending .pdf as the `<format>` portion of the URL: `/statements/1.pdf`.
components:
  schemas: {}
servers:
  - url: 'https://subdomain.chargify.com'
    description: ''
