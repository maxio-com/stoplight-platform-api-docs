---
"/subscriptions_components.json":
  get:
    summary: List Subscription Components for Site
    tags:
    - Subscription Components
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              type: object
              properties:
                subscriptions_components:
                  type: array
                  items:
                    "$ref": "#/components/schemas/Subscriptions-Component"
    operationId: listSubscriptionComponentsForSite
    description: This request will list components applied to each subscription.
    parameters:
    - schema:
        type: integer
        example: page=2
      in: query
      name: page
      description: Result records are organized in pages. By default, the first page
        of results is displayed. The page parameter specifies a page number of results
        to fetch. You can start navigating through the pages to consume the results.
        You do this by passing in a page parameter. Retrieve the next page by adding
        ?page=2 to the query string. If there are no results to return, then an empty
        result set will be returned.
    - schema:
        type: integer
        example: per_page=50
      in: query
      name: per_page
      description: This parameter indicates how many records to fetch in each request.
        Default value is 20. The maximum allowed values is 200; any per_page value
        over 200 will be changed to 200.
    - schema:
        type: string
        enum:
        - id
        - updated_at
        example: sort=updated_at
      in: query
      name: sort
      description: The attribute by which to sort.
    - schema:
        type: string
        enum:
        - asc
        - desc
        example: direction=asc
      in: query
      name: direction
      description: Controls the order in which results are returned.
    - schema:
        type: string
        enum:
        - updated_at
        example: date_field=updated_at
      in: query
      name: date_field
      description: The type of filter you'd like to apply to your search.
    - schema:
        type: string
      in: query
      name: start_date
      description: The start date (format YYYY-MM-DD) with which to filter the date_field.
        Returns components with a timestamp at or after midnight (12:00:00 AM) in
        your site’s time zone on the date specified,
    - schema:
        type: string
      in: query
      name: start_datetime
      description: The start date and time (format YYYY-MM-DD HH:MM:SS) with which
        to filter the date_field. Returns components with a timestamp at or after
        exact time provided in query. You can specify timezone in query - otherwise
        your site''s time zone will be used. If provided, this parameter will be used
        instead of start_date.
    - schema:
        type: string
      in: query
      name: end_date
      description: The end date (format YYYY-MM-DD) with which to filter the date_field.
        Returns components with a timestamp up to and including 11:59:59PM in your
        site’s time zone on the date specified.
    - schema:
        type: string
      in: query
      description: The end date and time (format YYYY-MM-DD HH:MM:SS) with which to
        filter the date_field. Returns components with a timestamp at or before exact
        time provided in query. You can specify timezone in query - otherwise your
        site''s time zone will be used. If provided, this parameter will be used instead
        of end_date.
      name: end_datetime
    - schema:
        type: array
        example: subscription_ids=1,2,3
        maxLength: 200
        minLength: 1
        minItems: 1
        maxItems: 200
      in: query
      name: subscription_ids
      description: Allows fetching components allocation with matching subscription
        id based on provided ids.
    - schema:
        type: string
        enum:
        - not_null
        example: price_point_ids=not_null
      in: query
      name: price_point_ids
      description: Allows fetching components allocation only if price point id is
        present.
    - schema:
        type: array
        example: product_family_ids=1,2,3
      in: query
      name: product_family_ids
      description: Allows fetching components allocation with matching product family
        id based on provided ids.
    - schema:
        type: string
        example: include=subscription
        enum:
        - subscription
      in: query
      name: include
      description: Allows including additional data in the response.
    - schema:
        type: boolean
        enum:
        - 'true'
        - 'false'
        example: filter[use_site_exchange_rate]=true
      in: query
      name: filter[use_site_exchange_rate]
      description: Allows fetching components allocation with matching use_site_exchange_rate
        based on provided value.
    - schema:
        type: string
        example: filter[currencies]=USD,EUR
      in: query
      name: filter[currencies]
      description: Allows fetching components allocation with matching currency based
        on provided values.
    - schema:
        type: string
        example: filter[subscription][states]=active,canceled&include=subscription
      in: query
      name: filter[subscription][states]
      description: Allows fetching components allocations that belong to the subscription
        with matching states based on provided values. To use this filter you also
        have to include the following param in the request `include=subscription`.
    - schema:
        type: string
        example: filter[subscription][date_field]=updated_at&include=subscription
        enum:
        - updated_at
      in: query
      name: filter[subscription][date_field]
      description: The type of filter you'd like to apply to your search. To use this
        filter you also have to include the following param in the request `include=subscription`.
    - schema:
        type: string
      in: query
      name: filter[subscription][start_date]
      description: The start date (format YYYY-MM-DD) with which to filter the date_field.
        Returns components that belong to the subscription with a timestamp at or
        after midnight (12:00:00 AM) in your site’s time zone on the date specified.
        To use this filter you also have to include the following param in the request
        `include=subscription`.
    - schema:
        type: string
      in: query
      name: filter[subscription][start_datetime]
      description: The start date and time (format YYYY-MM-DD HH:MM:SS) with which
        to filter the date_field. Returns components that belong to the subscription
        with a timestamp at or after exact time provided in query. You can specify
        timezone in query - otherwise your site''s time zone will be used. If provided,
        this parameter will be used instead of start_date. To use this filter you
        also have to include the following param in the request `include=subscription`.
    - schema:
        type: string
      in: query
      name: filter[subscription][end_date]
      description: The end date (format YYYY-MM-DD) with which to filter the date_field.
        Returns components that belong to the subscription with a timestamp up to
        and including 11:59:59PM in your site’s time zone on the date specified. To
        use this filter you also have to include the following param in the request
        `include=subscription`.
    - schema:
        type: string
      in: query
      name: filter[subscription][end_datetime]
      description: The end date and time (format YYYY-MM-DD HH:MM:SS) with which to
        filter the date_field. Returns components that belong to the subscription
        with a timestamp at or before exact time provided in query. You can specify
        timezone in query - otherwise your site''s time zone will be used. If provided,
        this parameter will be used instead of end_date. To use this filter you also
        have to include the following param in the request `include=subscription`.
  parameters: []
