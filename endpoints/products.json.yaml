---
"/products.json":
  get:
    summary: List Products
    tags:
    - Products
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  product:
                    "$ref": "../models/Product.yaml"
            examples:
              example-1:
                value:
                - product:
                    id: 0
                    name: string
                    handle: string
                    description: string
                    accounting_code: string
                    request_credit_card: true
                    expiration_interval: 0
                    expiration_interval_unit: month
                    created_at: string
                    updated_at: string
                    price_in_cents: 0
                    interval: 0
                    interval_unit: month
                    initial_charge_in_cents: 0
                    trial_price_in_cents: 0
                    trial_interval: 0
                    trial_interval_unit: month
                    archived_at: string
                    require_credit_card: true
                    return_params: string
                    taxable: true
                    update_return_url: string
                    initial_charge_after_trial: true
                    version_number: 0
                    update_return_params: string
                    product_family:
                      id: 0
                      name: string
                      handle: string
                      accounting_code:
                      description: string
                      created_at: string
                      updated_at: string
                    public_signup_pages:
                    - id: 0
                      return_url: string
                      return_params: string
                      url: string
                    product_price_point_name: string
                    request_billing_address: true
                    require_billing_address: true
                    require_shipping_address: true
                    use_site_exchange_rate: true
                    tax_code: string
                    default_product_price_point_id: 0
    operationId: listProducts
    description: This method allows to retrieve a list of Products belonging to a
      Site.
    parameters:
    - schema:
        type: string
        enum:
        - updated_at
        - created_at
        example: date_field=created_at
      in: query
      name: date_field
      description: The type of filter you would like to apply to your search.
    - schema:
        type: string
      in: query
      name: end_date
      description: The end date (format YYYY-MM-DD) with which to filter the date_field.
        Returns products with a timestamp up to and including 11:59:59PM in your site’s
        time zone on the date specified.
    - schema:
        type: string
      in: query
      name: end_datetime
      description: The end date and time (format YYYY-MM-DD HH:MM:SS) with which to
        filter the date_field. Returns products with a timestamp at or before exact
        time provided in query. You can specify timezone in query - otherwise your
        site''s time zone will be used. If provided, this parameter will be used instead
        of end_date.
    - schema:
        type: string
      in: query
      name: start_date
      description: The start date (format YYYY-MM-DD) with which to filter the date_field.
        Returns products with a timestamp at or after midnight (12:00:00 AM) in your
        site’s time zone on the date specified.
    - schema:
        type: string
      in: query
      name: start_datetime
      description: The start date and time (format YYYY-MM-DD HH:MM:SS) with which
        to filter the date_field. Returns products with a timestamp at or after exact
        time provided in query. You can specify timezone in query - otherwise your
        site''s time zone will be used. If provided, this parameter will be used instead
        of start_date.
    - schema:
        type: number
        minLength: 1
        example: page=2
      in: query
      name: page
      description: Result records are organized in pages. By default, the first page
        of results is displayed. The page parameter specifies a page number of results
        to fetch. You can start navigating through the pages to consume the results.
        You do this by passing in a page parameter. Retrieve the next page by adding
        ?page=2 to the query string. If there are no results to return, then an empty
        result set will be returned.
    - schema:
        type: number
        example: per_page=50
        minLength: 1
        maxLength: 200
        default: 20
      in: query
      name: per_page
      description: This parameter indicates how many records to fetch in each request.
        Default value is 20. The maximum allowed values is 200; any per_page value
        over 200 will be changed to 200.
    - schema:
        type: boolean
        enum:
        - 'true'
        - 'false'
        example: include_archived=true
      in: query
      name: include_archived
      description: Include archived products.
    - schema:
        type: string
        example: include=prepaid_product_price_point
        enum:
        - prepaid_product_price_point
      in: query
      name: include
      description: Allows including additional data in the response.
    - schema:
        type: string
        example: include=prepaid_product_price_point&filter[prepaid_product_price_point][product_price_point_id]=not_null
        enum:
        - 'null'
        - not_null
      in: query
      name: filter[prepaid_product_price_point][product_price_point_id]
      description: Allows fetching products only if a prepaid product price point
        is present or not. To use this filter you also have to include the following
        param in the request `include=prepaid_product_price_point`.
    - schema:
        type: boolean
        example: filter[use_site_exchange_rate]=true
      in: query
      name: filter[use_site_exchange_rate]
      description: Allows fetching products with matching use_site_exchange_rate based
        on provided value (refers to default price point).
