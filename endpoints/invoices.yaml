---
"/invoices/{uid}/refunds.json":
  parameters:
  - schema:
      type: string
    name: uid
    in: path
    required: true
    description: The uid of the Invoice
  post:
    summary: Refund Invoice
    tags:
    - Invoices
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Invoice"
            examples: {}
    operationId: refundInvoice
    description: |-
      Refund an invoice, segment, or consolidated invoice.

      ## Partial Refund for Consolidated Invoice

      A refund less than the total of a consolidated invoice will be split across its segments.

      A $50.00 refund on a $100.00 consolidated invoice with one $60.00 and one $40.00 segment, the refunded amount will be applied as 50% of each ($30.00 and $20.00 respectively).
    requestBody:
      content:
        application/json:
          schema:
            anyOf:
            - properties:
                refund:
                  type: object
                  required:
                  - amount
                  - memo
                  - payment_id
                  description: Refund an invoice or a segment of a consolidated invoice.
                  properties:
                    amount:
                      type: string
                      description: 'The amount to be refunded in decimal format as
                        a string. Example: "10.50". Must not exceed the remaining
                        refundable balance of the payment.'
                    memo:
                      type: string
                      description: A description that will be attached to the refund
                    payment_id:
                      type: integer
                      description: The ID of the payment to be refunded
                    external:
                      type: boolean
                      description: Flag that marks refund as external (no money is
                        returned to the customer). Defaults to `false`.
                    apply_credit:
                      type: boolean
                      description: If set to true, creates credit and applies it to
                        an invoice. Defaults to `false`.
                    void_invoice:
                      type: boolean
                      description: If `apply_credit` set to false and refunding full
                        amount, if `void_invoice` set to true, invoice will be voided
                        after refund. Defaults to `false`.
              required:
              - refund
            - properties:
                refund:
                  type: object
                  required:
                  - memo
                  - payment_id
                  - segment_uids
                  description: Refund consolidated invoice
                  properties:
                    memo:
                      type: string
                      description: A description for the refund
                    payment_id:
                      type: integer
                      description: The ID of the payment to be refunded
                    segment_uids:
                      type:
                      - array
                      - string
                      description: An array of segment uids to refund or the string
                        'all' to indicate that all segments should be refunded
                      items:
                        type: string
                    external:
                      type: boolean
                      description: Flag that marks refund as external (no money is
                        returned to the customer). Defaults to `false`.
                    apply_credit:
                      type: boolean
                      description: If set to true, creates credit and applies it to
                        an invoice. Defaults to `false`.
                    amount:
                      type: string
                      description: 'The amount of payment to be refunded in decimal
                        format. Example: "10.50". This will default to the full amount
                        of the payment if not provided.'
              required:
              - refund
            type: object
          examples:
            Refund Invoice:
              value:
                refund:
                  amount: '100.00'
                  memo: Refund for Basic Plan renewal
                  payment_id: 12345
                  external: false
                  apply_credit: false
                  void_invoice: true
            Refund Consolidated Invoice:
              value:
                refund:
                  memo: Refund for basic plan renewal
                  payment_id: 101
                  amount: '125.00'
                  segment_uids:
                  - inv_123
                  - inv_789
            Refund All Segments of Consolidated Invoice:
              value:
                refund:
                  memo: Refund for basic plan renewal
                  payment_id: 10101
                  segment_uids: all
"/invoices/{uid}.json":
  parameters:
  - schema:
      type: string
    name: uid
    in: path
    required: true
    description: The uid of the invoice
  get:
    summary: Read Invoice
    tags:
    - Invoices
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Invoice"
            examples:
              Example:
                value:
                  uid: inv_8gd8tdhtd3hgr
                  site_id: 51288
                  customer_id: 20194505
                  subscription_id: 20597774
                  number: '117'
                  sequence_number: 117
                  issue_date: '2018-07-26'
                  due_date: '2018-07-26'
                  paid_date: '2018-07-26'
                  status: paid
                  collection_method: automatic
                  payment_instructions: Make checks payable to Acme, Inc.
                  currency: USD
                  consolidation_level: none
                  parent_invoice_uid:
                  parent_invoice_number:
                  group_primary_subscription_id:
                  product_name: Monthly Product
                  product_family_name: Billing Plans
                  seller:
                    name: General Goods
                    address:
                      street: 123 General Goods Way
                      line2: Apt. 10
                      city: Boston
                      state: MA
                      zip: '02120'
                      country: US
                    phone: 555-555-1212
                  customer:
                    chargify_id: 20194505
                    first_name: Joe
                    last_name: Example
                    organization:
                    email: joe@example.com
                  memo: Please pay within 15 days.
                  billing_address:
                    street:
                    line2:
                    city:
                    state:
                    zip:
                    country:
                  shipping_address:
                    street:
                    line2:
                    city:
                    state:
                    zip:
                    country:
                  subtotal_amount: '100.0'
                  discount_amount: '0.0'
                  tax_amount: '0.0'
                  total_amount: '100.0'
                  credit_amount: '0.0'
                  paid_amount: '100.0'
                  refund_amount: '0.0'
                  due_amount: '0.0'
                  line_items:
                  - uid: li_8gd8tdhhgk55k
                    title: Monthly Product
                    description: Jul 26, 2018 - Aug 26, 2018
                    quantity: '1.0'
                    unit_price: '100.0'
                    subtotal_amount: '100.0'
                    discount_amount: '0.0'
                    tax_amount: '0.0'
                    total_amount: '100.0'
                    tiered_unit_price: false
                    period_range_start: '2018-07-26'
                    period_range_end: '2018-08-26'
                    product_id: 4607632
                    product_version: 1
                    component_id:
                    price_point_id:
                  discounts: []
                  taxes: []
                  credits: []
                  payments:
                  - transaction_time: '2018-07-26T15:22:02Z'
                    memo: 'Joe Example - Monthly Product: Renewal payment'
                    original_amount: '100.0'
                    applied_amount: '100.0'
                    payment_method:
                      card_brand: bogus
                      card_expiration: 10/2020
                      last_four:
                      masked_card_number: XXXX-XXXX-XXXX-1
                      type: credit_card
                    transaction_id: 253028955
                    prepayment: false
                  refunds: []
                  custom_fields: []
                  public_url: https://www.chargifypay.com/invoice/inv_8jzrw74xq8kxr?token=fb6kpjz5rcr2vttyjs4rcv6y
    operationId: readInvoice
    description: Use this endpoint to retrieve the details for an invoice.
"/invoices/events.json":
  get:
    summary: List Invoice Events
    tags:
    - Invoices
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              type: object
              properties:
                events:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                      event_type:
                        type: string
                        description: ''
                        enum:
                        - issue_invoice
                        - apply_credit_note
                        - apply_payment
                        - refund_invoice
                        - void_invoice
                        - void_remainder
                        - backport_invoice
                        - change_invoice_status
                        - change_invoice_collection_method
                        - remove_payment
                      event_data:
                        description: The event data is the data that, when combined
                          with the command, results in the output invoice found in
                          the invoice field.
                        anyOf:
                        - description: Example schema for an `apply_payment` event
                          properties:
                            memo:
                              type: string
                              description: The payment memo
                            original_amount:
                              type: string
                              description: 'The full, original amount of the payment
                                transaction as a string in full units. Incoming payments
                                can be split amongst several invoices, which will
                                result in a `applied_amount` less than the `original_amount`.
                                Example: A $100.99 payment, of which $40.11 is applied
                                to this invoice, will have an `original_amount` of
                                `"100.99"`.'
                            applied_amount:
                              type: string
                              description: 'The amount of the payment applied to this
                                invoice. Incoming payments can be split amongst several
                                invoices, which will result in a `applied_amount`
                                less than the `original_amount`. Example: A $100.99
                                payment, of which $40.11 is applied to this invoice,
                                will have an `applied_amount` of `"40.11"`.'
                            transaction_time:
                              type: string
                              description: The time the payment was removed, in ISO
                                8601 format, i.e. "2019-06-07T17:20:06Z"
                            payment_method:
                              type: object
                              description: A nested data structure detailing the method
                                of payment
                            transaction_id:
                              type: integer
                              description: The Chargify id of the original payment
                        type: object
                      timestamp:
                        type: string
                      invoice:
                        "$ref": "#/components/schemas/Invoice"
                page:
                  type: integer
                per_page:
                  type: integer
                total_pages:
                  type: integer
            examples:
              Example:
                value:
                  events:
                  - id: 83
                    event_type: apply_payment
                    event_data:
                      memo: 'Non-Resumable Canceled On Purpose - Standard Plan: Renewal
                        payment'
                      original_amount: '168.61'
                      applied_amount: '168.61'
                      transaction_time: '2018-08-01T16:00:00Z'
                      payment_method:
                        card_brand: visa
                        card_expiration: 12/2022
                        last_four:
                        masked_card_number: XXXX-XXXX-XXXX-1111
                        type: credit_card
                      transaction_id: 126
                      consolidation_level: none
                      parent_invoice_number:
                    timestamp: '2018-08-01T16:00:00Z'
                    invoice:
                      id: 614942008934401500
                      uid: inv_8gk5bwkct3gqt
                      site_id: 20
                      customer_id: 6
                      subscription_id: 10
                      number: '25'
                      sequence_number: 25
                      transaction_time: '2018-08-01T16:00:00Z'
                      created_at: '2018-08-01T16:00:00Z'
                      updated_at: '2018-08-01T16:00:00Z'
                      issue_date: '2018-08-01'
                      due_date: '2018-08-01'
                      paid_date: '2018-08-01'
                      status: paid
                      role: renewal
                      collection_method: automatic
                      payment_instructions: Please make checks payable to "Acme, Inc."
                      currency: USD
                      consolidation_level: none
                      parent_invoice_id:
                      subscription_group_id:
                      parent_invoice_number:
                      product_name: Standard Plan
                      product_family_name: Cloud Compute Servers
                      seller:
                        name: Acme, Inc.
                        address:
                          street:
                          line2:
                          city:
                          state:
                          zip:
                          country:
                        phone: 555-555-1234 x137
                        logo_url:
                      customer:
                        chargify_id: 6
                        first_name: Non-Resumable
                        last_name: Canceled On Purpose
                        organization:
                        email: evan4@example.com
                      payer:
                        chargify_id: 6
                        first_name: Non-Resumable
                        last_name: Canceled On Purpose
                        organization:
                        email: evan4@example.com
                      recipient_emails: []
                      terms: due_on_receipt
                      memo: Thanks for your business! If you have any questions, please
                        contact your account manager.
                      billing_address:
                        street: 200 Billing Rd.
                        line2: Suite 100
                        city: Needham
                        state: MA
                        zip: '02494'
                        country: US
                      shipping_address:
                        street: 100 Shipping St.
                        line2: Apt 200
                        city: Pleasantville
                        state: NC
                        zip: '12345'
                        country: US
                      line_items:
                      - uid: li_8gk5bwkct3gqk
                        title: Standard Plan
                        description: '08/01/2018 - 09/01/2018'
                        quantity: '1.0'
                        unit_price: '99.0'
                        subtotal_amount: '99.0'
                        discount_amount: '9.9'
                        tax_amount: '6.01425'
                        total_amount: '95.11425'
                        tiered_unit_price: false
                        period_range_start: '2018-08-01'
                        period_range_end: '2018-09-01'
                        transaction_id: 120
                        product_id: 84
                        product_version: 1
                        component_id:
                        price_point_id:
                        hide: false
                        component_cost_data:
                      - uid: li_8gk5bwkct3gqm
                        title: Small Instance (Hourly)
                        description: 07/22/2018 - 08/01/2018
                        quantity: '162.0'
                        unit_price: '0.09567901'
                        subtotal_amount: '15.5'
                        discount_amount: '1.55'
                        tax_amount: '0.941625'
                        total_amount: '14.891625'
                        tiered_unit_price: true
                        period_range_start: '2018-07-22'
                        period_range_end: '2018-08-01'
                        transaction_id: 121
                        product_id: 84
                        product_version: 1
                        component_id: 76
                        price_point_id:
                        hide: false
                        component_cost_data:
                          rates:
                          - component_code_id:
                            price_point_id: 160
                            product_id: 84
                            quantity: '162.0'
                            amount: '15.5'
                            pricing_scheme: tiered
                            tiers:
                            - starting_quantity: 1
                              ending_quantity: 100
                              quantity: '100.0'
                              unit_price: '0.0'
                              amount: '0.0'
                            - starting_quantity: 101
                              ending_quantity:
                              quantity: '62.0'
                              unit_price: '0.25'
                              amount: '15.5'
                      - uid: li_8gk5bwkct3gqn
                        title: Large Instance (Hourly)
                        description: 07/22/2018 - 08/01/2018
                        quantity: '194.0'
                        unit_price: '0.24226804'
                        subtotal_amount: '47.0'
                        discount_amount: '4.7'
                        tax_amount: '2.85525'
                        total_amount: '45.15525'
                        tiered_unit_price: true
                        period_range_start: '2018-07-22'
                        period_range_end: '2018-08-01'
                        transaction_id: 122
                        product_id: 84
                        product_version: 1
                        component_id: 77
                        price_point_id:
                        hide: false
                        component_cost_data:
                          rates:
                          - component_code_id:
                            price_point_id: 161
                            product_id: 84
                            quantity: '194.0'
                            amount: '47.0'
                            pricing_scheme: tiered
                            tiers:
                            - starting_quantity: 1
                              ending_quantity: 100
                              quantity: '100.0'
                              unit_price: '0.0'
                              amount: '0.0'
                            - starting_quantity: 101
                              ending_quantity:
                              quantity: '94.0'
                              unit_price: '0.5'
                              amount: '47.0'
                      - uid: li_8gk5bwkct3gqp
                        title: IP Addresses
                        description: '08/01/2018 - 09/01/2018'
                        quantity: '7.0'
                        unit_price: '2.0'
                        subtotal_amount: '14.0'
                        discount_amount: '1.4'
                        tax_amount: '0.8505'
                        total_amount: '13.4505'
                        tiered_unit_price: false
                        period_range_start: '2018-08-01'
                        period_range_end: '2018-09-01'
                        transaction_id: 123
                        product_id: 84
                        product_version: 1
                        component_id: 79
                        price_point_id: 163
                        hide: false
                        component_cost_data:
                          rates:
                          - component_code_id:
                            price_point_id: 163
                            product_id: 84
                            quantity: '7.0'
                            amount: '14.0'
                            pricing_scheme: per_unit
                            tiers:
                            - starting_quantity: 1
                              ending_quantity:
                              quantity: '7.0'
                              unit_price: '2.0'
                              amount: '14.0'
                      subtotal_amount: '175.5'
                      discount_amount: '17.55'
                      discounts:
                      - uid: dli_8gk5bwkct3gqq
                        title: Multi-service discount (10%)
                        description:
                        code: MULTI3
                        source_type: Coupon
                        source_id: 40
                        discount_type: percentage
                        percentage: '10.0'
                        eligible_amount: '175.5'
                        discount_amount: '17.55'
                        transaction_id: 124
                        line_item_breakouts:
                        - uid: li_8gk5bwkct3gqk
                          eligible_amount: '99.0'
                          discount_amount: '9.9'
                        - uid: li_8gk5bwkct3gqm
                          eligible_amount: '15.5'
                          discount_amount: '1.55'
                        - uid: li_8gk5bwkct3gqn
                          eligible_amount: '47.0'
                          discount_amount: '4.7'
                        - uid: li_8gk5bwkct3gqp
                          eligible_amount: '14.0'
                          discount_amount: '1.4'
                      tax_amount: '10.66'
                      taxes:
                      - uid: tli_8gk5bwkct3gqr
                        title: NC Sales Tax
                        description:
                        source_type: Tax
                        source_id: 1
                        percentage: '6.75'
                        taxable_amount: '157.95'
                        tax_amount: '10.66'
                        transaction_id: 125
                        line_item_breakouts:
                        - uid: li_8gk5bwkct3gqk
                          taxable_amount: '89.1'
                          tax_amount: '6.01425'
                        - uid: li_8gk5bwkct3gqm
                          taxable_amount: '13.95'
                          tax_amount: '0.941625'
                        - uid: li_8gk5bwkct3gqn
                          taxable_amount: '42.3'
                          tax_amount: '2.85525'
                        - uid: li_8gk5bwkct3gqp
                          taxable_amount: '12.6'
                          tax_amount: '0.8505'
                        tax_component_breakouts:
                        - tax_rule_id: 1
                          percentage: '6.75'
                          country_code: US
                          subdivision_code: NC
                      credit_amount: '0.0'
                      refund_amount: '0.0'
                      total_amount: '168.61'
                      paid_amount: '168.61'
                      due_amount: '0.0'
                      credits: []
                      refunds: []
                      payments:
                      - memo: 'Non-Resumable Canceled On Purpose - Standard Plan:
                          Renewal payment'
                        original_amount: '168.61'
                        applied_amount: '168.61'
                        transaction_time: '2018-08-01T16:00:00Z'
                        payment_method:
                          card_brand: visa
                          card_expiration: 12/2022
                          last_four:
                          masked_card_number: XXXX-XXXX-XXXX-1111
                          type: credit_card
                        transaction_id: 126
                        prepayment: false
                      custom_fields: []
                      display_settings:
                        hide_zero_subtotal_lines: false
                        include_discounts_on_lines: false
                  page: 48
                  per_page: 1
                  total_pages: 102
    operationId: listInvoiceEvents
    description: |-
      This endpoint returns a list of invoice events. Each event contains event "data" (such as an applied payment) as well as a snapshot of the `invoice` at the time of event completion.

      Exposed event types are:

      + issue_invoice
      + apply_credit_note
      + apply_payment
      + refund_invoice
      + void_invoice
      + void_remainder
      + backport_invoice
      + change_invoice_status
      + change_invoice_collection_method
      + remove_payment

      Invoice events are returned in ascending order.

      If both a `since_date` and `since_id` are provided in request parameters, the `since_date` will be used.

      Note - invoice events that occurred prior to 09/05/2018 __will not__ contain an `invoice` snapshot.
    parameters:
    - schema:
        type: string
      in: query
      name: since_date
    - schema:
        type: integer
      in: query
      name: since_id
    - schema:
        type: string
      in: query
      name: page
    - schema:
        type: string
        default: '100'
        minLength: 1
        maxLength: 200
      in: query
      name: per_page
    - schema:
        type: string
      in: query
      name: invoice_uid
      description: Providing an invoice_uid allows for scoping of the invoice events
        to a single invoice or credit note.
    - schema:
        type: string
      in: query
      description: Use this parameter if you want to fetch also invoice events with
        change_invoice_status type.
      name: with_change_invoice_status
    - schema:
        type: string
      in: query
      name: event_types
      description: 'Filter results by event_type. Supply a comma separated list of
        event types (listed above). eg: void_invoice,void_remainder'
"/invoices/{uid}/payments.json":
  parameters:
  - schema:
      type: string
    name: uid
    in: path
    required: true
    description: " The unique identifier for the invoice, this does not refer to the
      public facing invoice number"
  post:
    summary: Create Payment
    tags:
    - Invoices
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Invoice"
    operationId: recordPaymentForInvoice
    description: |-
      This API call should be used when you want to record a payment of a given type against a specific invoice. If you would like to apply a payment across multiple invoices, you can use the Bulk Payment endpoint.

      ## Create a Payment from the existing payment profile

      In order to apply a payment to an invoice using an existing payment profile, specify `type` as `payment`, the amount less than the invoice total, and the customer's `payment_profile_id`. The ID of a payment profile might be retrieved via the Payment Profiles API endpoint.

      ```
      {
        "type": "payment",
        "payment": {
          "amount": 10.00,
          "payment_profile_id": 123
        }
      }
      ```

      ## Create a Payment from the Subscription's Prepayment Account

      In order apply a prepayment to an invoice, specify the `type` as `prepayment`, and also the `amount`.

      ```
      {
        "type": "prepayment",
        "payment": {
          "amount": 10.00
        }
      }
      ```

      Note that the `amount` must be less than or equal to the Subscription's Prepayment account balance.

      ## Create a Payment from the Subscription's Service Credit Account

      In order to apply a service credit to an invoice, specify the `type` as `service_credit`, and also the `amount`:


      ```
      {
        "type": "service_credit",
        "payment": {
          "amount": 10.00
        }
      }
      ```

      Note that Chargify will attempt to fully pay the invoice's `due_amount` from the Subscription's Service Credit account. At this time, partial payments from a Service Credit Account are only allowed for consolidated invoices (subscription groups). Therefore, for normal invoices the Service Credit account balance must be greater than or equal to the invoice's `due_amount`.
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              payment:
                type: object
                properties:
                  amount:
                    type:
                    - string
                    - number
                    description: A string of the dollar amount to be refunded (eg.
                      "10.50" => $10.50)
                  memo:
                    type: string
                    description: A description to be attached to the payment.
                  method:
                    type: string
                    description: The type of payment method used.
                    enum:
                    - credit_card
                    - check
                    - cash
                    - money_order
                    - ach
                    - other
                    default: other
                  details:
                    type: string
                    description: 'Additional information related to the payment method
                      (eg. Check #)

                      '
              type:
                type: string
                description: The type of payment to be applied to an Invoice.
                default: external
                enum:
                - external
                - prepayment
                - service_credit
                - payment
          examples:
            Example 1:
              value:
                payment:
                  amount: 124.33
                  memo: for John Smith
                  payment_method_name: check
                  payment_method_details: "#0102"
            Example 2:
              value:
                type: prepayment
                payment:
                  amount: 10
      description: ''
"/invoices/payments.json":
  post:
    summary: Create Payment for Multiple Invoices
    tags:
    - Invoices
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              type: object
              properties:
                payment:
                  type: object
                  properties:
                    transaction_id:
                      type: number
                      description: The numeric ID of the transaction.
                    total_amount:
                      type: string
                      description: Dollar amount of the sum of the paid invoices.
                    currency_code:
                      type: string
                      description: The ISO 4217 currency code (3 character string)
                        representing the currency of invoice transaction.
                    applications:
                      type: array
                      items:
                        type: object
                        properties:
                          invoice_uid:
                            type: string
                            description: 'Unique identifier for the paid invoice.
                              It has the prefix "inv_" followed by alphanumeric characters.

                              '
                          application_uid:
                            type: string
                            description: 'Unique identifier for the payment. It has
                              the prefix "pmt_" followed by alphanumeric characters.

                              '
                          applied_amount:
                            type: string
                            description: Dollar amount of the paid invoice.
            examples:
              Example:
                value:
                  payment:
                    transaction_id: 1
                    total_amount: '100.00'
                    currency_code: USD
                    applications:
                    - invoice_uid: inv_8gk5bwkct3gqt
                      application_uid: pmt_1tr0hgsct3ybx
                      applied_amount: '50.00'
                    - invoice_uid: inv_7bc6bwkct3lyt
                      application_uid: pmt_2
                      applied_amount: '50.00'
      '422':
        description: Unprocessable Entity
        content:
          application/json:
            schema:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: string
            examples:
              Example:
                value:
                  errors:
                  - Total amount must be greater than 0
                  - Total amount must be higher or equal to invoices payment amount
                    sum
                  - Invoice does not exist
                  - Payment method must valid
                  - Invoices must be in the same currency
                  - A required parameter is missing
                  - Invoices belong to different subscriptions. Only invoices from
                    same subscriptions are allowed when total amount exceeds invoices
                    due amount.
                  - Individual invoices may not be overpaid. To create a prepayment,
                    add overage to the total amount.
                  - Paying consolidated invoices is forbidden
                  - Invoice payment amounts must be greater than 0
                  - Invoice must have an open balance
                  - Effective date is missing
                  - Effective date is invalid or malformed
                  - Effective date must occur in the past
                  - Multiple applications associated to a single invoice, please aggregate
                    and send as a single application per invoice.
    operationId: recordExternalPaymentForInvoices
    description: |-
      This API call should be used when you want to record an external payment against multiple invoices.

       In order apply a payment to multiple invoices, at minimum, specify the `amount` and `applications` (i.e., `invoice_uid` and `amount`) details.

      ```
      {
        "payment": {
          "memo": "to pay the bills",
          "details": "check number 8675309",
          "method": "check",
          "amount": "250.00",
          "applications": [
            {
              "invoice_uid": "inv_8gk5bwkct3gqt",
              "amount": "100.00"
            },
            {
              "invoice_uid": "inv_7bc6bwkct3lyt",
              "amount": "150.00"
            }
          ]
        }
      }
      ```

      Note that the invoice payment amounts must be greater than 0. Total amount must be greater or equal to invoices payment amount sum.
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              payment:
                type: object
                required:
                - amount
                - applications
                properties:
                  memo:
                    type: string
                    description: A description to be attached to the payment.
                  details:
                    type: string
                    description: 'Additional information related to the payment method
                      (eg. Check #).

                      '
                  method:
                    type: string
                    description: The type of payment method used.
                    enum:
                    - credit_card
                    - check
                    - cash
                    - money_order
                    - ach
                    - other
                    default: other
                  amount:
                    type:
                    - string
                    - number
                    description: Dollar amount of the sum of the invoices payment
                      (eg. "10.50" => $10.50).
                  received_on:
                    type: string
                    description: Date reflecting when the payment was received from
                      a customer. Must be in the past.
                  applications:
                    type: array
                    items:
                      type: object
                      required:
                      - invoice_uid
                      - amount
                      properties:
                        invoice_uid:
                          type: string
                          description: 'Unique identifier for the invoice. It has
                            the prefix "inv_" followed by alphanumeric characters.

                            '
                        amount:
                          type: string
                          description: Dollar amount of the invoice payment (eg. "10.50"
                            => $10.50).
          examples:
            Example:
              value:
                payment:
                  memo: to pay the bills
                  details: check number 8675309
                  method: check
                  amount: '100.00'
                  applications:
                  - invoice_uid: inv_8gk5bwkct3gqt
                    amount: '50.00'
                  - invoice_uid: inv_7bc6bwkct3lyt
                    amount: '50.00'
    parameters: []
  parameters: []
"/invoices/{uid}/reopen.json":
  parameters:
  - schema:
      type: string
    name: uid
    in: path
    required: true
    description: The unique identifier of the invoice
  post:
    summary: Reopen Invoice
    tags:
    - Invoices
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Invoice"
      '404':
        description: Not Found
        content:
          application/json:
            schema:
              type: 'null'
      '422':
        description: Unprocessable Entity (WebDAV)
        content:
          application/json:
            schema:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: string
            examples:
              Example:
                value:
                  errors:
                  - The invoice must be in canceled status to be reopened.
    operationId: reopenInvoice
    description: |-
      This endpoint allows you to reopen any invoice with the "canceled" status. Invoices enter "canceled" status if they were open at the time the subscription was canceled (whether through dunning or an intentional cancellation).

      Invoices with "canceled" status are no longer considered to be due. Once reopened, they are considered due for payment. Payment may then be captured in one of the following ways:

      - Reactivating the subscription, which will capture all open invoices (See note below about automatic reopening of invoices.)
      - Recording a payment directly against the invoice

      A note about reactivations: any canceled invoices from the most recent active period are automatically opened as a part of the reactivation process. Reactivating via this endpoint prior to reactivation is only necessary when you wish to capture older invoices from previous periods during the reactivation.

      ### Reopening Consolidated Invoices

      When reopening a consolidated invoice, all of its canceled segments will also be reopened.
"/invoices/{uid}/void.json":
  parameters:
  - schema:
      type: string
    name: uid
    in: path
    required: true
    description: The unique identifier of the invoice
  post:
    summary: Void Invoice
    tags:
    - Invoices
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Invoice"
      '404':
        description: Not Found
        content:
          application/json:
            schema:
              type: 'null'
      '422':
        description: Unprocessable Entity (WebDAV)
        content:
          application/json:
            schema:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: string
            examples:
              Example:
                value:
                  errors:
                  - Invoice status must be 'open', 'canceled', or 'pending' and non-consolidated
                    to be voided.
    operationId: voidInvoice
    description: This endpoint allows you to void any invoice with the "open" or "canceled"
      status.  It will also allow voiding of an invoice with the "pending" status
      if it is not a consolidated invoice.
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              void:
                type: object
                required:
                - reason
                properties:
                  reason:
                    type: string
            required:
            - void
          examples:
            Example:
              value:
                void:
                  reason: Duplicate invoice
"/invoices/{invoice_uid}/segments.json":
  parameters:
  - schema:
      type: string
    name: invoice_uid
    in: path
    required: true
    description: The unique identifier of the consolidated invoice
  get:
    summary: List Segments for Consolidated Invoice
    tags:
    - Invoices
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              type: object
              properties:
                invoices:
                  type: array
                  items:
                    "$ref": "#/components/schemas/Invoice"
            examples:
              Example:
                value:
                  invoices:
                  - uid: inv_8htcd29wcq3q6
                    site_id: 51288
                    customer_id: 20153415
                    subscription_id: 23277588
                    number: '125'
                    sequence_number: 125
                    issue_date: '2018-09-20'
                    due_date: '2018-09-20'
                    paid_date: '2018-09-20'
                    status: paid
                    collection_method: automatic
                    payment_instructions: Make checks payable to Acme, Inc.
                    currency: USD
                    consolidation_level: parent
                    parent_invoice_uid:
                    parent_invoice_number:
                    group_primary_subscription_id: 23277588
                    product_name: Trial and setup fee
                    product_family_name: Billing Plans
                    seller:
                      name: General Goods
                      address:
                        street: 123 General Goods Way
                        line2: Apt. 10
                        city: Boston
                        state: MA
                        zip: '02120'
                        country: US
                      phone: 555-555-1212
                    customer:
                      chargify_id: 20153415
                      first_name: Meg
                      last_name: Example
                      organization: ''
                      email: meg@example.com
                    memo: Please pay within 15 days.
                    billing_address:
                      street: 123 I Love Cats Way
                      line2: ''
                      city: Boston
                      state: MA
                      zip: '90210'
                      country: US
                    shipping_address:
                      street: 123 I Love Cats Way
                      line2: ''
                      city: Boston
                      state: MA
                      zip: '90210'
                      country: US
                    subtotal_amount: '100.0'
                    discount_amount: '0.0'
                    tax_amount: '0.0'
                    total_amount: '100.0'
                    credit_amount: '0.0'
                    paid_amount: '100.0'
                    refund_amount: '0.0'
                    due_amount: '0.0'
                  - uid: inv_8hr3546xp4h8n
                    site_id: 51288
                    customer_id: 21687686
                    subscription_id: 22007644
                    number: '124'
                    sequence_number: 124
                    issue_date: '2018-09-18'
                    due_date: '2018-09-18'
                    paid_date:
                    status: open
                    collection_method: remittance
                    payment_instructions: Make checks payable to Acme, Inc.
                    currency: USD
                    consolidation_level: none
                    parent_invoice_uid:
                    parent_invoice_number:
                    group_primary_subscription_id:
                    product_name: Trial and setup fee
                    product_family_name: Billing Plans
                    seller:
                      name: General Goods
                      address:
                        street: 123 General Goods Way
                        line2: Apt. 10
                        city: Boston
                        state: MA
                        zip: '02120'
                        country: US
                      phone: 555-555-1212
                    customer:
                      chargify_id: 21687686
                      first_name: Charlene
                      last_name: Tester
                      organization: ''
                      email: food@example.com
                    memo: Please pay within 15 days.
                    billing_address:
                      street: ''
                      line2: ''
                      city: ''
                      state: ''
                      zip: ''
                      country: ''
                    shipping_address:
                      street: ''
                      line2: ''
                      city: ''
                      state: ''
                      zip: ''
                      country: ''
                    subtotal_amount: '100.0'
                    discount_amount: '0.0'
                    tax_amount: '0.0'
                    total_amount: '100.0'
                    credit_amount: '0.0'
                    paid_amount: '0.0'
                    refund_amount: '0.0'
                    due_amount: '100.0'
                  - uid: inv_8hr3546wdwxkr
                    site_id: 51288
                    customer_id: 21687670
                    subscription_id: 22007627
                    number: '123'
                    sequence_number: 123
                    issue_date: '2018-09-18'
                    due_date: '2018-09-18'
                    paid_date: '2018-09-18'
                    status: paid
                    collection_method: automatic
                    payment_instructions: Make checks payable to Acme, Inc.
                    currency: USD
                    consolidation_level: none
                    parent_invoice_uid:
                    parent_invoice_number:
                    group_primary_subscription_id:
                    product_name: Trial End - Free
                    product_family_name: Billing Plans
                    seller:
                      name: General Goods
                      address:
                        street: 123 General Goods Way
                        line2: Apt. 10
                        city: Boston
                        state: MA
                        zip: '02120'
                        country: US
                      phone: 555-555-1212
                    customer:
                      chargify_id: 21687670
                      first_name: Hello
                      last_name: World
                      organization: '123'
                      email: example@example.com
                    memo: Please pay within 15 days.
                    billing_address:
                      street: 123 Anywhere Street
                      line2: ''
                      city: Boston
                      state: MA
                      zip: '02120'
                      country: US
                    shipping_address:
                      street: ''
                      line2: ''
                      city: Boston
                      state: AL
                      zip: '02120'
                      country: US
                    subtotal_amount: '0.0'
                    discount_amount: '0.0'
                    tax_amount: '0.0'
                    total_amount: '0.0'
                    credit_amount: '0.0'
                    paid_amount: '0.0'
                    refund_amount: '0.0'
                    due_amount: '0.0'
                  - uid: inv_8hjtk8bz56bbp
                    site_id: 51288
                    customer_id: 20137757
                    subscription_id: 20541100
                    number: '122'
                    sequence_number: 122
                    issue_date: '2018-09-10'
                    due_date: '2018-09-10'
                    paid_date: '2018-09-10'
                    status: paid
                    collection_method: automatic
                    payment_instructions: Make checks payable to Acme, Inc.
                    currency: USD
                    consolidation_level: none
                    parent_invoice_uid:
                    parent_invoice_number:
                    group_primary_subscription_id:
                    product_name: "$0 Product"
                    product_family_name: Billing Plans
                    seller:
                      name: General Goods
                      address:
                        street: 123 General Goods Way
                        line2: Apt. 10
                        city: Boston
                        state: MA
                        zip: '02120'
                        country: US
                      phone: 555-555-1212
                    customer:
                      chargify_id: 20137757
                      first_name: Sasha
                      last_name: Example
                      organization: ''
                      email: example@example.com
                    memo: Please pay within 15 days.
                    billing_address:
                      street: 123 I Love Cats Way
                      line2: ''
                      city: Catville
                      state: MA
                      zip: '90210'
                      country: US
                    shipping_address:
                      street: 123 I Love Cats Way
                      line2: ''
                      city: Catville
                      state: AL
                      zip: '90210'
                      country: US
                    subtotal_amount: '0.0'
                    discount_amount: '0.0'
                    tax_amount: '0.0'
                    total_amount: '0.0'
                    credit_amount: '0.0'
                    paid_amount: '0.0'
                    refund_amount: '0.0'
                    due_amount: '0.0'
                  public_url: https://www.chargifypay.com/invoice/inv_8jzrw74xq8kxr?token=fb6kpjz5rcr2vttyjs4rcv6y
    operationId: listInvoiceSegments
    description: Invoice segments returned on the index will only include totals,
      not detailed breakdowns for `line_items`, `discounts`, `taxes`, `credits`, `payments`,
      or `custom_fields`.
    parameters:
    - schema:
        type: integer
        default: 1
      in: query
      name: page
      description: Result records are organized in pages. By default, the first page
        of results is displayed. The page parameter specifies a page number of results
        to fetch. You can start navigating through the pages to consume the results.
        You do this by passing in a page parameter. Retrieve the next page by adding
        ?page=2 to the query string. If there are no results to return, then an empty
        result set will be returned.
    - schema:
        type: integer
        default: 20
        maxLength: 200
      in: query
      name: per_page
      description: This parameter indicates how many records to fetch in each request.
        Default value is 20. The maximum allowed values is 200; any per_page value
        over 200 will be changed to 200.
    - schema:
        type: string
        default: asc
        enum:
        - asc
        - desc
      in: query
      name: direction
      description: Sort direction of the returned segments.
"/invoices/{uid}/deliveries.json":
  parameters:
  - schema:
      type: string
    name: uid
    in: path
    required: true
    description: The uid of the invoice
  post:
    summary: Send Invoice
    tags:
    - Invoices
    responses:
      '204':
        description: No Content
      '422':
        description: Unprocessable Entity (WebDAV)
        content:
          application/json:
            schema:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: string
            examples:
              Example:
                value:
                  errors:
                  - 'cc_recipient_emails: must be a valid email address'
    operationId: sendInvoice
    description: |-
      This endpoint allows for invoices to be programmatically delivered via email. This endpoint supports the delivery of both ad-hoc and automatically generated invoices. Additionally, this endpoint supports email delivery to direct recipients, carbon-copy (cc) recipients, and blind carbon-copy (bcc) recipients.

      Please note that if no recipient email addresses are specified in the request, then the subscription's default email configuration will be used. For example, if `recipient_emails` is left blank, then the invoice will be delivered to the subscription's customer email address.

      On success, a 204 no-content response will be returned. Please note that this does not indicate that email(s) have been delivered, but instead indicates that emails have been successfully queued for delivery. If _any_ invalid or malformed email address is found in the request body, the entire request will be rejected and a 422 response will be returned.
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              recipient_emails:
                type: array
                maxItems: 5
                items:
                  type: string
              cc_recipient_emails:
                type: array
                maxItems: 5
                items:
                  type: string
              bcc_recipient_emails:
                type: array
                maxItems: 5
                items:
                  type: string
          examples:
            Example:
              value:
                recipient_emails:
                - user0@example.com
                cc_recipient_emails:
                - user1@example.com
                bcc_receipient_emails:
                - user2@example.com
"/invoices/{uid}/customer_information/preview.json":
  parameters:
  - schema:
      type: string
    name: uid
    in: path
    required: true
    description: The uid of the invoice
  post:
    summary: Preview Customer Information Changes
    tags:
    - Invoices
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              type: object
              properties:
                changes:
                  type: object
                  properties:
                    payer:
                      type: object
                      properties:
                        before:
                          type: object
                        after:
                          type: object
                    shipping_address:
                      type: object
                      properties:
                        before:
                          type: object
                        after:
                          type: object
                    billing_address:
                      type: object
                      properties:
                        before:
                          type: object
                        after:
                          type: object
                    custom_fields:
                      type: object
                      properties:
                        before:
                          type: array
                          items:
                            type: object
                            properties:
                              owner_id:
                                type: integer
                              owner_type:
                                type: string
                              name:
                                type: string
                              value:
                                type: string
                              metadatum_id:
                                type: integer
                        after:
                          type: array
                          items:
                            type: object
                            properties:
                              owner_id:
                                type: integer
                              owner_type:
                                type: string
                              name:
                                type: string
                              value:
                                type: string
                              metadatum_id:
                                type: integer
            examples:
              Example:
                value:
                  changes:
                    payer:
                      before:
                        last_name: Beatty
                      after:
                        last_name: Doe
                    shipping_address:
                      before:
                        line2: Suite 703
                      after:
                        line2: Suite 702
                    billing_address:
                      before:
                        line2: Suite 703
                      after:
                        line2: Suite 702
                    custom_fields:
                      before:
                      - owner_id: 1002
                        owner_type: Customer
                        name: Color
                        value: blue
                        metadatum_id: 20
                      after:
                      - owner_id: 1002
                        owner_type: Customer
                        name: Color
                        value: green
                        metadatum_id: 20
      '404':
        description: Not Found
        content:
          application/json:
            schema:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: string
            examples:
              Example:
                value:
                  errors:
                  - Invoice not found
      '422':
        description: Unprocessable Entity (WebDAV)
        content:
          application/json:
            schema:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: string
            examples:
              Example:
                value:
                  errors:
                  - Invoice must have an open status
    operationId: previewCustomerInformationChanges
    description: |-
      Customer information may change after an invoice is issued which may lead to a mismatch between customer information that are present on an open invoice and actual customer information. This endpoint allows to preview these differences, if any.

      The endpoint doesn't accept a request body. Customer information differences are calculated on the application side.
"/invoices/{uid}/customer_information.json":
  parameters:
  - schema:
      type: string
    name: uid
    in: path
    required: true
    description: The uid of the invoice
  put:
    summary: Update Customer Information
    tags:
    - Invoices
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Invoice"
            examples:
              Example:
                value:
                  uid: elit Ut
                  site_id: 46283786
                  customer_id: -62349460
                  subscription_id: 12801726
                  number: dolore et ut
                  sequence_number: -84210096
                  issue_date: in e
                  due_date: magna elit tempor occaecat amet
                  paid_date: consectetur elit culpa magna sint
                  status: veniam in
                  collection_method: Excepteur
                  payment_instructions: enim officia
                  currency: dolore
                  consolidation_level: exercitation officia labore
                  product_name: occaecat veniam culpa
                  product_family_name: qui commodo ea dolore cillum
                  seller:
                    name: co
                    phone: ullamco in officia
                  customer:
                    chargify_id: -55826334
                    first_name: deserunt
                    last_name: velit dolore
                    email: aliquip sed velit Lorem
                  memo: ea cupidatat deserunt
                  billing_address:
                    street: qui commodo cupidatat sunt
                    line2: ut officia enim
                    city: velit minim dolore sint nulla
                    state: velit
                    zip: ullamco
                    country: irure est laborum deserun
                  shipping_address:
                    street: do fugiat dolore deserunt officia
                    line2: ipsum cillum
                    city: aliqua laboris incididunt ut
                    state: et fugiat sit
                    zip: dolore do
                    country: Excepteur consequat cillum
                  subtotal_amount: dolore mollit
                  discount_amount: aute
                  tax_amount: eu aliqua est velit ea
                  total_amount: ut non
                  credit_amount: sit
                  refund_amount: et eiusmod qui sed
                  paid_amount: amet nulla s
                  due_amount: non esse ullamco
                  line_items:
                  - description: qui
                    price_point_id: -95020509
                    tax_amount: occaecat deserunt veniam
                    subtotal_amount: commodo consequat tempor et Duis
                  - uid: ''
                    subtotal_amount: ven
                  - price_point_id: 94750853
                    product_id: 79058036
                    tax_amount: Duis
                    subtotal_amount: irure officia ipsum
                  - unit_price: eiusmod consequat ut nostrud
                    tax_amount: quis nulla proident
                  - period_range_end: ut dolor
                    product_id: 57352537
                    description: minim in dolore Ut Excepteur
                    uid: sit qui in ullamco anim
                  discounts:
                  - title: nostrud
                  taxes:
                  - source_type: enim
                    line_item_breakouts:
                    - uid: in ipsum
                      tax_amount: velit
                      taxable_amount: quis sint
                    - uid: co
                  - uid: enim irure in
                    title: incididunt est mollit irure
                  credits:
                  - uid: exercitation eiusmod
                    transaction_time: Lorem ea
                    credit_note_number: qui fugiat labore laborum
                    credit_note_uid: ipsum sunt
                  - memo: dolor
                  refunds:
                  - memo: deserunt elit
                  - original_amount: Duis nulla
                  payments:
                  - prepayment: false
                    memo: enim Excepteur Lorem magna sit
                  - transaction_time: deserunt
                    prepayment: false
                    payment_method:
                      details: labore ut et
                      kind: dolor qui
                      memo: ea commodo
                      type: fugiat veniam
                      card_brand: consequat
                      card_expiration: aliqua a
                      last_four: ut in consectetur sed
                      masked_card_number: minim ea ullamco nostrud tempor
                  - prepayment: true
                    transaction_id: 67527234
                  - original_amount: c
                    memo: dolore fugiat labore
                  custom_fields:
                  - name: non nul
                    value: consectetur aliqua
                    owner_type: ad
                    owner_id: 18482224
                  - value: anim
                    owner_type: in
                  - owner_id: -13438519
                  - name: ullamco non deserunt in
                  public_url: dolo
                  previous_balance_data:
                    capture_date: aliqua velit quis voluptate
                    invoices:
                    - number: veniam dolore labore ipsum cupidatat
                      uid: tempor
                      outstanding_amount: Excepteur nostrud irur
                    - outstanding_amount: id
      '404':
        description: Not Found
        content:
          application/json:
            schema:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: string
            examples:
              Example:
                value:
                  errors:
                  - Invoice not found
      '422':
        description: Unprocessable Entity (WebDAV)
        content:
          application/json:
            schema:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: string
            examples:
              Example:
                value:
                  errors:
                  - Invoice must have an open status
    operationId: updateCustomerInformation
    description: |-
      This endpoint updates customer information on an open invoice and returns the updated invoice. If you would like to preview changes that will be applied, use the `/invoices/{uid}/customer_information/preview.json` endpoint before.

      The endpoint doesn't accept a request body. Customer information differences are calculated on the application side.
"/invoices/{uid}/issue.json":
  parameters:
  - schema:
      type: string
    name: uid
    in: path
    description: The unique identifier of the invoice
    required: true
  post:
    summary: Issue Invoice
    tags:
    - Invoices
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Invoice"
      '401':
        description: Unauthorized
      '404':
        description: Not Found
      '422':
        description: Unprocessable Entity (WebDAV)
        content:
          application/json:
            schema:
              type: object
              properties:
                errors:
                  type: array
                  items:
                    type: string
              required:
              - errors
    operationId: issueInvoice
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              on_failed_payment:
                type: string
                enum:
                - leave_open_invoice
                - rollback_to_pending
                - initiate_dunning
                default: leave_open_invoice
      description: ''
    description: |-
      This endpoint allows you to issue an invoice that is in "pending" status. For example, you can issue an invoice that was created when allocating new quantity on a component and using "accrue charges" option.

      You cannot issue a pending child invoice that was created for a member subscription in a group.

      For Remittance subscriptions, the invoice will go into "open" status and payment won't be attempted. The value for `on_failed_payment` would be rejected if sent. Any prepayments or service credits that exist on subscription will be automatically applied. Additionally, if setting is on, an email will be sent for issued invoice.

      For Automatic subscriptions, prepayments and service credits will apply to the invoice and before payment is attempted. On successful payment, the invoice will go into "paid" status and email will be sent to the customer (if setting applies). When payment fails, the next event depends on the `on_failed_payment` value:
      - `leave_open_invoice` - prepayments and credits applied to invoice; invoice status set to "open"; email sent to the customer for the issued invoice (if setting applies); payment failure recorded in the invoice history. This is the default option.
      - `rollback_to_pending` - prepayments and credits not applied; invoice remains in "pending" status; no email sent to the customer; payment failure recorded in the invoice history.
      - `initiate_dunning` - prepayments and credits applied to the invoice; invoice status set to "open"; email sent to the customer for the issued invoice (if setting applies); payment failure recorded in the invoice history; subscription will  most likely go into "past_due" or "canceled" state (depending upon net terms and dunning settings).
